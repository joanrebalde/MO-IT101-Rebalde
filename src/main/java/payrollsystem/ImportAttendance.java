/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package payrollsystem;

import java.awt.HeadlessException;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author User
 */
public class ImportAttendance extends javax.swing.JFrame {
    
    private static final String DB_URL = "jdbc:mysql://localhost:3306/employeedata";
	private static final String DB_USERNAME = "root";
	private static final String DB_PASSWORD = "Gracecubio@07";

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    DefaultTableModel model = new DefaultTableModel();
    
    /**
     * Creates new form ImportAttendance
     */
    public ImportAttendance() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        Object col [] = {"EmployeeID","FirstName","LastName","Date","TimeIn","TimeOut","Total Hours"};
        
        model.setColumnIdentifiers(col);
        jTable1.setModel(model);
        conn = ImportAttendance.ConnectDB();
    }
    
    public static Connection ConnectDB(){
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
        
        }
        catch (ClassNotFoundException | SQLException e)
        {
        JOptionPane.showMessageDialog(null, e);
        return null;
        }
    }
    
    public void updateTable()
{
    conn = ImportAttendance.ConnectDB();
    
    if (conn !=null)
    {
        String sql = "Select ID, EmployeeID, FirstName, LastName, SSS, PhilHealth, Pagibig, "
                + "Others, Total from deductions";
         try
    {
       pst = conn.prepareStatement(sql);
       rs = pst.executeQuery();
       Object[] columnData = new Object[9];
       
       while (rs.next()){
           columnData [0] = rs.getString("ID");
           columnData [1] = rs.getString("EmployeeID");
           columnData [2] = rs.getString("FirstName");
           columnData [3] = rs.getString("LastName");
           columnData [4] = rs.getString("SSS");
           columnData [5] = rs.getString("PhilHealth");
           columnData [6] = rs.getString("Pagibig");
           columnData [7] = rs.getString("Others");
           columnData [8] = rs.getString("Total"); 
           model.addRow(columnData);
           
       }
        
    }
    catch (SQLException e)
    {
        JOptionPane.showMessageDialog(null, e);
      
    }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Date", "Time In", "Time Out", "Total Hours"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(218, 223, 225));
        jButton2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(218, 223, 225));
        jButton3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jButton3.setText("Import");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(218, 223, 225));
        jButton4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jButton3)
                        .addGap(8, 8, 8)
                        .addComponent(jButton4)
                        .addGap(8, 8, 8)
                        .addComponent(jButton2)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private JFrame frame;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        frame = new JFrame ("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Confirm if you want to exit","MotorPH Payroll System",
            JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
        System.exit(0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      DefaultTableModel ImportDataFromExcelModel = (DefaultTableModel) jTable1.getModel();
        ImportDataFromExcelModel.setRowCount(0);
        
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        
        
        String currentDirectoryPath = "C:\\Users\\User\\Documents";
        JFileChooser excelFileChooserImport = new JFileChooser (currentDirectoryPath);
        
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter ("Custom Files","xls","xlsx","xslm");
        excelFileChooserImport.addChoosableFileFilter(excelFileNameExtensionFilter);
        
        int excelChooser = excelFileChooserImport.showOpenDialog(null);
        
        if (excelChooser ==JFileChooser.APPROVE_OPTION){
            File excelFile = excelFileChooserImport.getSelectedFile();
            try {
                excelFIS = new FileInputStream (excelFile);
                excelBIS = new BufferedInputStream (excelFIS);
                XSSFWorkbook excelImportWorkbook = new XSSFWorkbook (excelBIS);
                XSSFSheet excelSheet = excelImportWorkbook.getSheetAt(0);
                
                for (int i = 0; i < excelSheet.getLastRowNum(); i++){
                    XSSFRow excelRow = excelSheet.getRow(i);
                    
   
                    XSSFCell excelImportedEmployeeID = excelRow.getCell(0);
                    XSSFCell excelImportedFirstName = excelRow.getCell(1);
                    XSSFCell excelImportedLastName = excelRow.getCell(2);
                    XSSFCell excelImportedDate = excelRow.getCell(3);
                    XSSFCell excelImportedTimeIn = excelRow.getCell(4);
                    XSSFCell excelImportedTimeOut = excelRow.getCell(5);
                    XSSFCell excelImportedTotal = excelRow.getCell(6);
                    
                    ImportDataFromExcelModel.addRow(new Object [] {excelImportedEmployeeID,excelImportedFirstName,excelImportedLastName,excelImportedDate,excelImportedTimeIn,excelImportedTimeOut,excelImportedTotal});

                }
                JOptionPane.showMessageDialog(null, "Data Imported Successfully");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
        }  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         
        
        Statement st;
        
        DefaultTableModel modl = (DefaultTableModel) jTable1.getModel();
            
        if (modl.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Table is empty");
        } else {
                      
        try
            {
                st = conn.createStatement();
               
                for(int i = 0; i < modl.getRowCount(); i++) {
                
                String id = modl.getValueAt(i, 0).toString();
                String fn = modl.getValueAt(i, 1).toString();
                String ln = modl.getValueAt(i, 2).toString();
                String date = modl.getValueAt(i, 3).toString();
                String timein = modl.getValueAt(i, 4).toString();
                String timeout = modl.getValueAt(i, 5).toString();
                String total = modl.getValueAt(i, 6).toString();
                        
               
                String sql = "INSERT INTO attendance (EmployeeID, FirstName, LastName, Date, TimeIn, TimeOut,Total) VALUES(?,?,?,?,?,?,?)";
                
                pst = conn.prepareStatement(sql);
                pst.setString(1, id);
                pst.setString(2, fn);
                pst.setString(3, ln);
                pst.setString(4, date);
                pst.setString(5, timein);
                pst.setString(6, timeout);
                pst.setString(7, total);
                
                pst.execute();

                JOptionPane.showMessageDialog(null, "Data Inserted");
                modl.setRowCount(0);
                } 
                
        } catch (HeadlessException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e);

            }
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
